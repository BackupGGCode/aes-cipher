/******************************************************************************/
/*  Class CIPHER                                                              */
/*  PO: S. Maslyakov, rusoil.9@gmail.com                                      */
/*                                                                            */
/*  Revision:     1.0                                                         */
/*  Date:         2011/02/03 14:17:33                                         */
/******************************************************************************/


#ifndef __CIPHER_H
#define __CIPHER_H


#include "cipher_def.h"


//==============================================================================
//  Class CIPHER
//==============================================================================
class CIPHER : public HEXFILE
{
    //==========================================================================
    // App: Constructor
    //==========================================================================
    public: CIPHER() {}
    //==========================================================================
    //==========================================================================


    //==========================================================================
    // App: Destructor
    //==========================================================================
    public: virtual ~CIPHER() {
        if (m_tools.binFile.is_open()) {
            m_tools.binFile.close();
        };
    }
    //==========================================================================
    //==========================================================================


    //==========================================================================
    // App: Print help
    //==========================================================================
    public: void PrintHelp(const std::string _self);
    //==========================================================================
    //==========================================================================


    //==========================================================================
    // App: Get settings from cmd line
    //==========================================================================
    public: bool_t GetSettFromCmdLine(const int32_t _argc, const int8_t ** _argv);
    //==========================================================================
    //==========================================================================


    //==========================================================================
    // App: Convers hex to bin
    //==========================================================================
    public: bool_t ConversHexToBin();
    //==========================================================================
    //==========================================================================


    //==========================================================================
    // App: Encript file
    //==========================================================================
    public: bool_t Encrypt();
    //==========================================================================
    //==========================================================================

    //==========================================================================
    // App: Get dir
    //==========================================================================
    private: void GetDir(const int8_t * const _dir);
    //==========================================================================
    //==========================================================================


    //==========================================================================
    // App: Remove blank from string
    //==========================================================================
    private: bool_t RemoveBlank(std::string& _str);
    //==========================================================================
    //==========================================================================


    //==========================================================================
    // App: Extract key (vector)
    //==========================================================================
    private: bool_t ExtractKey(std::string& _hexStr, std::vector <uint8_t>& _dstArray);
    //==========================================================================
    //==========================================================================


    //==========================================================================
    // App: Create dst file
    //==========================================================================
    private: bool_t CreateDstFile();
    //==========================================================================
    //==========================================================================


    private: __TOOLS_CIPHER m_tools;
};
//==============================================================================
//==============================================================================


#endif